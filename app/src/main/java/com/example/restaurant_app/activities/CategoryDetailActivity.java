package com.example.restaurant_app.activities;import android.annotation.SuppressLint;import android.app.Activity;import android.app.AlertDialog;import android.content.Context;import android.content.DialogInterface;import android.content.Intent;import android.os.Bundle;import android.view.View;import android.widget.Button;import android.widget.TextView;import android.widget.Toast;import com.example.restaurant_app.adapters.SharedPreferencesAdapter;import com.example.restaurant_app.firestore.CategoryFirestoreManager;import com.example.restaurant_app.models.Category;import com.example.restaurant_app.models.User;import com.google.gson.Gson;/** * * @author Jonas Mitschke * @content activity for category-detail */public class CategoryDetailActivity extends Activity {    private CategoryFirestoreManager categoryManager;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.category_detail);        categoryManager = CategoryFirestoreManager.newInstance();        final String categoryID = getIntent().getExtras().getString("categoryID");        Context context = getBaseContext();        Gson gson = new Gson();        final User curUser = gson.fromJson(SharedPreferencesAdapter.getDefaults("currentUser", context), User.class);        if (categoryID == null) throw new AssertionError();        /**         * checks if user want to update existing category         */        if(!categoryID.equals("0")) {            categoryManager.getCategoryById(categoryID, new CategoryFirestoreManager.GetCategoryByIdCallback() {                @SuppressLint("SetTextI18n")                @Override                public void onCallback(final Category category) {                    ((TextView) findViewById(R.id.categoryUpdateName)).setText(category.getName());                    final Button saveButton = findViewById(R.id.categoryUpdateSaveButton);                    saveButton.setOnClickListener(new View.OnClickListener() {                        @Override                        public void onClick(View v) {                            final String name = ((TextView) findViewById(R.id.categoryUpdateName)).getText().toString();                            category.setName(name);                            categoryManager.updateCategory(category);                            Intent intent = new Intent(v.getContext(), CategoryListActivity.class);                            v.getContext().startActivity(intent);                        }                    });                    final Button deleteButton = findViewById(R.id.categoryUpdateDeleteButton);                    deleteButton.setOnClickListener(new View.OnClickListener() {                        @Override                        public void onClick(final View v) {                            if (curUser.getRestaurant().getRestaurantId().equals(category.getRestaurantId())) {                                AlertDialog.Builder builder = new AlertDialog.Builder(CategoryDetailActivity.this);                                builder.setMessage(R.string.dialog_delete_category)                                        .setPositiveButton(R.string.button_confirm, new DialogInterface.OnClickListener() {                                            public void onClick(DialogInterface dialog, int id) {                                                categoryManager.deleteCategory(category.getCategoryId());                                                Intent intent = new Intent(v.getContext(), CategoryListActivity.class);                                                v.getContext().startActivity(intent);                                            }                                        })                                        .setNegativeButton(R.string.button_cancel, null).show();                            } else {                                Toast toast = Toast.makeText(getApplicationContext(), getResources().getString(R.string.toast_no_permition), Toast.LENGTH_LONG);                                toast.show();                            }                        }                    });                }            });        }        /**         * else: user want to create a new category         */        else {            findViewById(R.id.categoryUpdateDeleteButton).setVisibility(View.INVISIBLE);            final Button saveButton = findViewById(R.id.categoryUpdateSaveButton);            saveButton.setOnClickListener(new View.OnClickListener() {                @Override                public void onClick(View view) {                    final String name = ((TextView) findViewById(R.id.categoryUpdateName)).getText().toString();                    Category newCategory = new Category(curUser.getRestaurant().getRestaurantId(), name);                    categoryManager.createCategory(newCategory);                    Intent intent = new Intent(view.getContext(), CategoryListActivity.class);                    view.getContext().startActivity(intent);                }            });        }    }}