package com.example.restaurant_app.activities;import android.app.Activity;import android.content.Context;import android.content.Intent;import android.os.Bundle;import android.view.View;import android.widget.Button;import android.widget.ListView;import androidx.annotation.NonNull;import com.example.restaurant_app.adapters.CategoryListAdapter;import com.example.restaurant_app.adapters.SharedPreferencesAdapter;import com.example.restaurant_app.helpers.CollectionNames;import com.example.restaurant_app.models.Category;import com.example.restaurant_app.models.User;import com.google.android.gms.tasks.OnCompleteListener;import com.google.android.gms.tasks.Task;import com.google.firebase.firestore.DocumentSnapshot;import com.google.firebase.firestore.FirebaseFirestore;import com.google.firebase.firestore.QuerySnapshot;import com.google.gson.Gson;import java.util.ArrayList;import java.util.List;/** * * @author Jonas Mitschke * @content activity for category-list */public class CategoryListActivity extends Activity {    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.category_list);        Gson gson = new Gson();        Context context = getBaseContext();        final User curUser = gson.fromJson(SharedPreferencesAdapter.getDefaults("currentUser",context), User.class);        FirebaseFirestore.getInstance().collection(CollectionNames.categoryCollection)                .whereEqualTo("restaurantId", curUser.getRestaurant().getRestaurantId()).get()                .addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {            @Override            public void onComplete(@NonNull Task<QuerySnapshot> task) {                List<Category> return_categories = new ArrayList<>();                if(task.isSuccessful()){                    for(DocumentSnapshot document : task.getResult()) {                        Category category = document.toObject(Category.class);                        return_categories.add(category);                    }                    ListView categoriesListView = (ListView) findViewById(R.id.categoryList);                    CategoryListAdapter categoryAdapter = new CategoryListAdapter(CategoryListActivity.this, return_categories);                    categoriesListView.setAdapter(categoryAdapter);                }            }        });        final Button newCategoryButton = findViewById(R.id.newCategoryButton);        newCategoryButton.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                Intent intent = new Intent(view.getContext(), CategoryDetailActivity.class);                intent.putExtra("categoryID", "0");                view.getContext().startActivity(intent);            }        });        final Button goToOverviewButton = findViewById(R.id.goToOverviewButton);        goToOverviewButton.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                Intent intent = new Intent(view.getContext(), OverviewActivity.class);                view.getContext().startActivity(intent);            }        });    }}